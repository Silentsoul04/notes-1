(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{220:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"https://img.mukewang.com/5cd9645f000128e506400360.jpg",alt:""}})]),t._v(" "),a("blockquote",[a("p",[t._v("与有肝胆人共事，从无字句处读书。")]),t._v(" "),a("p",[t._v("               —— 周恩来")])]),t._v(" "),a("p",[t._v("在 Webpack 工作流程 文章中已经提到过，Compiler 和 Compilation 都是继承自"),a("a",{attrs:{href:"https://github.com/webpack/tapable",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tapable"),a("OutboundLink")],1),t._v(" ，不同点是Compiler是每个 Webpack 的配置，对应一个Compiler对象，记录着整个 Webpack 的生命周期；在构建的过程中，每次构建都会产生一次Compilation，Compilation则是构建周期的产物。本文将进一步介绍Compiler和Compilation，通过本章节的学习，将会对 Webpack 构建过程有一个更加宏观的掌握。")]),t._v(" "),a("h2",{attrs:{id:"compiler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compiler","aria-hidden":"true"}},[t._v("#")]),t._v(" Compiler")]),t._v(" "),a("p",[a("code",[t._v("Compiler")]),t._v(" 模块是 Webpack 最核心的模块。每次执行 Webpack 构建的时候，在 Webpack 内部，会首先实例化一个 Compiler 对象，然后调用它的 run 方法来开始一次完整的编译过程。我们直接使用 Webpack API "),a("code",[t._v("webpack(options)")]),t._v("的方式得到的就是一个"),a("code",[t._v("Compiler")]),t._v("实例化的对象，这时候 Webpack 并不会立即开始构建，需要我们手动执行"),a("code",[t._v("comipler.run()")]),t._v("才可以。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" webpack "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webpack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" webpackConfig "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./webpack.config.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只传入 config")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" compiler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("webpack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("webpackConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始执行")]),t._v("\ncompiler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上面两句等价于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("webpack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("webpackConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[a("em",[a("strong",[t._v("Tips：")])]),t._v(" 使用 "),a("code",[t._v("webpack-dev-server")]),t._v(" API 方式时，只需要传入 "),a("code",[t._v("compiler")]),t._v(" 对象给 "),a("code",[t._v("dev server")]),t._v(" 即可，不需要手动执行"),a("code",[t._v("compiler.run()")]),t._v("。")])]),t._v(" "),a("p",[t._v("我们如果要手动实例化一个Compiler对象，可以通过"),a("code",[t._v("const Compiler = webpack.Compiler")]),t._v("来获取它的类，一般只有一个父 Compiler，而子 Compiler 可以用来处理一些特殊的事件。")]),t._v(" "),a("p",[t._v("在 webpack plugin 中，每个插件都有个apply方法。这个方法接收到的参数就是Compiler对象，我们可以通过在对应的钩子时机绑定处理函数来编写插件，下面主要介绍下Compiler对象的钩子。")]),t._v(" "),a("h4",{attrs:{id:"compiler-钩子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compiler-钩子","aria-hidden":"true"}},[t._v("#")]),t._v(" Compiler 钩子")]),t._v(" "),a("p",[t._v("在Webpack 工作流程中，我们通过下面的代码，获取了对应的钩子名称：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" compiler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("webpack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历hooks，添加回调，输出`hookName`")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("compiler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hooks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("hookName")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("compiler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hooks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hookName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        compiler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hooks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hookName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'anyString'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("run -> ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("hookName"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发webpack的编译流程")]),t._v("\ncompiler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("得到"),a("code",[t._v("compiler.run()")]),t._v("之后的工作流程：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("run -> beforeRun\nrun -> run\nrun -> normalModuleFactory\nrun -> contextModuleFactory\nrun -> beforeCompile\nrun -> compile\nrun -> thisCompilation\nrun -> compilation\nrun -> make\nrun -> afterCompile\nrun -> shouldEmit\nrun -> emit\nrun -> afterEmit\nrun -> done\n")])])]),a("p",[t._v("上面的方式只是输出"),a("code",[t._v("compiler.run()")]),t._v("之后的一部分钩子，Compiler 还有好多钩子。比如在 watch 模式下，还会有 "),a("code",[t._v("watchRun")]),t._v("、"),a("code",[t._v("watchClose")]),t._v(" 和 "),a("code",[t._v("invalid")]),t._v("。我们如果要绑定某个钩子，则可以使用下面的方法来绑定：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("compiler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hooks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someHook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MyPlugin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("params")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ... */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("下面通过一个表格来说明下对应的关系：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("钩子名")]),t._v(" "),a("th",[t._v("Tapable 类型")]),t._v(" "),a("th",[t._v("触发时机")]),t._v(" "),a("th",[t._v("传入 callback 的参数")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("entryOption")]),t._v(" "),a("td",[t._v("SyncBailHook")]),t._v(" "),a("td",[t._v("在 webpack 中的 entry 配置处理过之后")]),t._v(" "),a("td",[t._v("context，entry")])]),t._v(" "),a("tr",[a("td",[t._v("afterPlugins")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("初始化完内置插件之后")]),t._v(" "),a("td",[t._v("compiler")])]),t._v(" "),a("tr",[a("td",[t._v("afterResolvers")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("resolver 完成之后（后面解释resolver是什么）")]),t._v(" "),a("td",[t._v("compiler")])]),t._v(" "),a("tr",[a("td",[t._v("environment")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("准备编译环境，webpack plugins配置初始化完成之后")]),t._v(" "),a("td",[t._v("compiler")])]),t._v(" "),a("tr",[a("td",[t._v("afterEnvironment")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("编译环境准备好之后")]),t._v(" "),a("td",[t._v("compiler")])]),t._v(" "),a("tr",[a("td",[t._v("beforeRun")]),t._v(" "),a("td",[t._v("AsyncSeriesHook")]),t._v(" "),a("td",[t._v("开始正式编译之前")]),t._v(" "),a("td",[t._v("compiler")])]),t._v(" "),a("tr",[a("td",[t._v("run")]),t._v(" "),a("td",[t._v("AsyncSeriesHook")]),t._v(" "),a("td",[t._v("开始编译之后，读取 records 之前；监听模式触发watch-run")]),t._v(" "),a("td",[t._v("compiler")])]),t._v(" "),a("tr",[a("td",[t._v("watchRun")]),t._v(" "),a("td",[t._v("AsyncSeriesHook")]),t._v(" "),a("td",[t._v("监听模式下，一个新的编译触发之后")]),t._v(" "),a("td",[t._v("compiler")])]),t._v(" "),a("tr",[a("td",[t._v("normalModuleFactory")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("NormalModuleFactory 创建之后")]),t._v(" "),a("td",[t._v("normalModuleFactory实例")])]),t._v(" "),a("tr",[a("td",[t._v("contextModuleFactory")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("ContextModuleFactory 创建之后")]),t._v(" "),a("td",[t._v("contextModuleFactory实例")])]),t._v(" "),a("tr",[a("td",[t._v("beforeCompile")]),t._v(" "),a("td",[t._v("AsyncSeriesHook")]),t._v(" "),a("td",[t._v("compilation 实例化需要的参数创建完毕之后")]),t._v(" "),a("td",[t._v("compilationParams")])]),t._v(" "),a("tr",[a("td",[t._v("compile")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("一次 compilation 编译创建之前")]),t._v(" "),a("td",[t._v("compilationParams")])]),t._v(" "),a("tr",[a("td",[t._v("thisCompilation")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("触发 compilation 事件之前执行")]),t._v(" "),a("td",[t._v("compilation，compilationParams")])]),t._v(" "),a("tr",[a("td",[t._v("compilation")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("compilation创建成功之后")]),t._v(" "),a("td",[t._v("compilation，compilationParams")])]),t._v(" "),a("tr",[a("td",[t._v("make")]),t._v(" "),a("td",[t._v("AsyncParallelHook")]),t._v(" "),a("td",[t._v("完成编译之前")]),t._v(" "),a("td",[t._v("compilation")])]),t._v(" "),a("tr",[a("td",[t._v("afterCompile")]),t._v(" "),a("td",[t._v("AsyncSeriesHook")]),t._v(" "),a("td",[t._v("完成编译和封存（seal）编译产出之后")]),t._v(" "),a("td",[t._v("compilation")])]),t._v(" "),a("tr",[a("td",[t._v("shouldEmit")]),t._v(" "),a("td",[t._v("SyncBailHook")]),t._v(" "),a("td",[t._v("发布构建后资源之前触发，回调必须返回true/false，true则继续")]),t._v(" "),a("td",[t._v("compilation")])]),t._v(" "),a("tr",[a("td",[t._v("emit")]),t._v(" "),a("td",[t._v("AsyncSeriesHook")]),t._v(" "),a("td",[t._v("生成资源到 output 目录之前")]),t._v(" "),a("td",[t._v("compilation")])]),t._v(" "),a("tr",[a("td",[t._v("afterEmit")]),t._v(" "),a("td",[t._v("AsyncSeriesHook")]),t._v(" "),a("td",[t._v("生成资源到 output 目录之后")]),t._v(" "),a("td",[t._v("compilation")])]),t._v(" "),a("tr",[a("td",[t._v("done")]),t._v(" "),a("td",[t._v("AsyncSeriesHook")]),t._v(" "),a("td",[t._v("compilation完成之后")]),t._v(" "),a("td",[t._v("stats")])]),t._v(" "),a("tr",[a("td",[t._v("failed")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("compilation失败")]),t._v(" "),a("td",[t._v("error")])]),t._v(" "),a("tr",[a("td",[t._v("invalid")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("监听模式下，编译无效时")]),t._v(" "),a("td",[t._v("fileName，changeTime")])]),t._v(" "),a("tr",[a("td",[t._v("watchClose")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("监听模式停止")]),t._v(" "),a("td",[t._v("无")])])])]),t._v(" "),a("blockquote",[a("p",[a("em",[a("strong",[t._v("Tips：")])]),t._v(" 整个Compiler完整地展现了 Webpack 的构建流程：")]),t._v(" "),a("ol",[a("li",[t._v("准备阶段：make之前做的事情都属于准备阶段，这阶段的calback入参以compiler为主；")]),t._v(" "),a("li",[t._v("编译阶段：这阶段以compilation的钩子为主，calback入参以compilation为主；")]),t._v(" "),a("li",[t._v("产出阶段：这阶段从compilation开始，最后回到Compiler钩子上，calback传入参数是跟结果相关的数据，包括stats、error。")])])]),t._v(" "),a("h3",{attrs:{id:"注解1：resolver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注解1：resolver","aria-hidden":"true"}},[t._v("#")]),t._v(" 注解1：Resolver")]),t._v(" "),a("p",[t._v("Compiler 的 Resolver 是指来自于enhanced-resolve模块，它主要功能是一个提供异步"),a("code",[t._v("require.resolve()")]),t._v("，即从哪里去查找文件的路径，可以通过Webpack的"),a("code",[t._v("resolve")]),t._v("和"),a("code",[t._v("resolveLoader")]),t._v("来配置。Compiler类有三种类型的内置 Resolver：")]),t._v(" "),a("ul",[a("li",[t._v("Normal：通过绝对路径或相对路径，解析一个模块；")]),t._v(" "),a("li",[t._v("Context：通过给定的上下文（context）解析一个模块；")]),t._v(" "),a("li",[t._v("Loader：解析一个 webpack loader。")])]),t._v(" "),a("h3",{attrs:{id:"注解2：thiscompilation和compilation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注解2：thiscompilation和compilation","aria-hidden":"true"}},[t._v("#")]),t._v(" 注解2：thisCompilation和compilation")]),t._v(" "),a("p",[t._v("这里为什么会有 thisCompilation和compilation 两个钩子呢？其实是跟子编译（child compiler）有关， Compiler 实例通过 createChildCompiler 方法可以创建子编译实例 childCompiler。创建childCompiler时，childCompiler会复制 compiler 实例的任务点监听器。compilation的钩子会被复制，而thisCompilation 钩子则不会被复制。")]),t._v(" "),a("h2",{attrs:{id:"compilation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compilation","aria-hidden":"true"}},[t._v("#")]),t._v(" Compilation")]),t._v(" "),a("p",[t._v("在 Compilation 阶段，模块会被加载(loaded)、封存(sealed)、优化(optimized)、分块(chunked)、哈希(hashed)和重新创建(restored)，Compilation 对象包含了当前的模块资源、编译生成资源、变化的文件等。当 Webpack 以监听（watch）模式运行时，每当检测到一个文件变化，一次新的 Compilation 将被创建。Compilation 对象也提供了很多事件回调供插件做扩展，通过 Compilation 也能读取到 Compiler 对象。")]),t._v(" "),a("h3",{attrs:{id:"compilation-钩子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compilation-钩子","aria-hidden":"true"}},[t._v("#")]),t._v(" Compilation 钩子")]),t._v(" "),a("p",[t._v("在 Compilation 中处理的对象分别是"),a("code",[t._v("module")]),t._v("、"),a("code",[t._v("chunk")]),t._v("、"),a("code",[t._v("asset")]),t._v("，由 modules 组成"),a("code",[t._v("chunks")]),t._v("，由chunks生成"),a("code",[t._v("assets")]),t._v("，处理顺序是："),a("strong",[t._v("module → modules → chunks → assets")]),t._v("，先从单个 module 开始处理，查找依赖关系，最后完成单个 module 处理，完成全部modules 之后，开始 chunks 阶段处理，最后在根据优化配置，按需生成 assets。")]),t._v(" "),a("p",[t._v("所以整个 Compilation 的生命周期钩子虽然比较多，但是大规律上是围绕这个顺序进行的，下面是大部分钩子表格如下，其中带★的是比较重要的钩子：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("钩子名")]),t._v(" "),a("th",[t._v("Tapable 类型")]),t._v(" "),a("th",[t._v("触发时机")]),t._v(" "),a("th",[t._v("传入 callback 的参数")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("buildModule")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("在模块构建开始之前触发")]),t._v(" "),a("td",[t._v("module")])]),t._v(" "),a("tr",[a("td",[t._v("rebuildModule")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("在重新构建一个模块之前触发")]),t._v(" "),a("td",[t._v("module")])]),t._v(" "),a("tr",[a("td",[t._v("failedModule")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("模块构建失败时执行")]),t._v(" "),a("td",[t._v("module，error")])]),t._v(" "),a("tr",[a("td",[t._v("succeedModule")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("模块构建成功时执行")]),t._v(" "),a("td",[t._v("module")])]),t._v(" "),a("tr",[a("td",[t._v("finishModules")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("所有模块都完成构建")]),t._v(" "),a("td",[t._v("module")])]),t._v(" "),a("tr",[a("td",[t._v("finishRebuildingModule")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("一个模块完成重新构建")]),t._v(" "),a("td",[t._v("module")])]),t._v(" "),a("tr",[a("td",[t._v("seal")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("★编译（compilation）停止接收新模块时触发")]),t._v(" "),a("td",[t._v("module")])]),t._v(" "),a("tr",[a("td",[t._v("unseal")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("编译（compilation）开始接收新模块时触发")]),t._v(" "),a("td",[t._v("module")])]),t._v(" "),a("tr",[a("td",[t._v("optimizeDependencies")]),t._v(" "),a("td",[t._v("SyncBailHook")]),t._v(" "),a("td",[t._v("依赖优化开始时触发")]),t._v(" "),a("td",[t._v("modules")])]),t._v(" "),a("tr",[a("td",[t._v("afterOptimizeDependencies")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("依赖优化结束时触发")]),t._v(" "),a("td",[t._v("modules")])]),t._v(" "),a("tr",[a("td",[t._v("optimize")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("★优化阶段开始时触发")]),t._v(" "),a("td",[t._v("modules")])]),t._v(" "),a("tr",[a("td",[t._v("optimizeModules")]),t._v(" "),a("td",[t._v("SyncBailHook")]),t._v(" "),a("td",[t._v("★模块的优化\tmodules")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("afterOptimizeModules")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("模块优化结束时触发")]),t._v(" "),a("td",[t._v("modules")])]),t._v(" "),a("tr",[a("td",[t._v("optimizeChunks")]),t._v(" "),a("td",[t._v("SyncBailHook")]),t._v(" "),a("td",[t._v("★优化 chunks")]),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("afterOptimizeChunks")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("chunk 优化完成之后触发")]),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("optimizeTree")]),t._v(" "),a("td",[t._v("AsyncSeriesHook")]),t._v(" "),a("td",[t._v("异步优化依赖树")]),t._v(" "),a("td",[t._v("chunks，modules")])]),t._v(" "),a("tr",[a("td",[t._v("afterOptimizeTree")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("异步优化依赖树完成时")]),t._v(" "),a("td",[t._v("chunks，modules")])]),t._v(" "),a("tr",[a("td",[t._v("optimizeChunkModules")]),t._v(" "),a("td",[t._v("SyncBailHook")]),t._v(" "),a("td",[t._v("优化单个chunk中的 modules 开始")]),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("afterOptimizeChunkModules")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("优化单个chunk中的 modules 结束")]),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("shouldRecord")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("reviveModules")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("从 records 中恢复模块信息")]),t._v(" "),a("td",[t._v("modules，records")])]),t._v(" "),a("tr",[a("td",[t._v("optimizeModuleOrder")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("将模块从最重要的到最不重要的进行排序")]),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("beforeModuleIds")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("处理 modulesId 之前")]),t._v(" "),a("td",[t._v("modules")])]),t._v(" "),a("tr",[a("td",[t._v("moduleIds")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("处理 modulesId")]),t._v(" "),a("td",[t._v("modules")])]),t._v(" "),a("tr",[a("td",[t._v("optimizeModuleIds")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("优化 modulesId")]),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("afterOptimizeModuleIds")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("优化 modulesId之后")]),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("reviveChunks")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("从 records 中恢复 chunk 信息")]),t._v(" "),a("td",[t._v("modules，records")])]),t._v(" "),a("tr",[a("td",[t._v("optimizeChunkOrder")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("将 chunk 从最重要的到最不重要的进行排序")]),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("beforeOptimizeChunkIds")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("chunk id 优化之前触发")]),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("optimizeChunkIds")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("chunk id 优化开始触发")]),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("afterOptimizeChunkIds")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("chunk id 优化结束触发")]),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("recordModules")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("将模块信息存储到 records")]),t._v(" "),a("td",[t._v("modules，records")])]),t._v(" "),a("tr",[a("td",[t._v("recordChunks")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("将 chunk 信息存储到 records")]),t._v(" "),a("td",[t._v("chunks，records")])]),t._v(" "),a("tr",[a("td",[t._v("beforeHash")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("在编译被哈希（hashed）之前")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("afterHash")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("在编译被哈希（hashed）之后")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("record")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("将 compilation 相关信息存储到 records 中")]),t._v(" "),a("td",[t._v("compilation，records")])]),t._v(" "),a("tr",[a("td",[t._v("beforeChunkAssets")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("在创建 chunk 资源（asset）之前")]),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("additionalChunkAssets")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("为 chunk 创建附加资源（asset）")]),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("additionalAssets")]),t._v(" "),a("td",[t._v("AsyncSeriesHook")]),t._v(" "),a("td",[t._v("★为编译（compilation）创建附加资源（asset）")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("optimizeChunkAssets")]),t._v(" "),a("td",[t._v("AsyncSeriesHook")]),t._v(" "),a("td",[t._v("★优化所有 chunk 资源（asset）")]),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("afterOptimizeChunkAssets")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("chunk 资源（asset）已经被优化")]),t._v(" "),a("td",[t._v("chunks")])]),t._v(" "),a("tr",[a("td",[t._v("optimizeAssets")]),t._v(" "),a("td",[t._v("AsyncSeriesHook")]),t._v(" "),a("td",[t._v("★优化存储在 compilation.assets 中的所有资源（asset）")]),t._v(" "),a("td",[t._v("assets")])]),t._v(" "),a("tr",[a("td",[t._v("afterOptimizeAssets")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("优化compilation.assets 中的所有资源（asset）之后")]),t._v(" "),a("td",[t._v("assets")])]),t._v(" "),a("tr",[a("td",[t._v("moduleAsset")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("一个模块中的一个资源被添加到编译中")]),t._v(" "),a("td",[t._v("module，filename")])]),t._v(" "),a("tr",[a("td",[t._v("chunkAsset")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("一个 chunk 中的一个资源被添加到编译中")]),t._v(" "),a("td",[t._v("chunk，filename")])]),t._v(" "),a("tr",[a("td",[t._v("assetPath")]),t._v(" "),a("td",[t._v("SyncWaterfallHook")]),t._v(" "),a("td",[t._v("asset 路径确认之后")]),t._v(" "),a("td",[t._v("filename，data")])]),t._v(" "),a("tr",[a("td",[t._v("childCompiler")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("子编译（compiler）触发")]),t._v(" "),a("td",[t._v("childCompiler，compilerName，compilerIndex")])]),t._v(" "),a("tr",[a("td",[t._v("normalModuleLoader")]),t._v(" "),a("td",[t._v("SyncHook")]),t._v(" "),a("td",[t._v("★普通模块 loader，真正（一个接一个地）加载模块图（graph）中所有模块的函数")]),t._v(" "),a("td",[t._v("loaderContext，module")])])])]),t._v(" "),a("h3",{attrs:{id:"compilation-和-stats-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compilation-和-stats-对象","aria-hidden":"true"}},[t._v("#")]),t._v(" Compilation 和 Stats 对象")]),t._v(" "),a("p",[t._v("在 Webpack 的回调函数中会得到stats对象。这个对象实际来自于"),a("code",[t._v("Compilation.getStats()")]),t._v("，返回的是主要含有"),a("code",[t._v("modules")]),t._v("、"),a("code",[t._v("chunks")]),t._v("和"),a("code",[t._v("assets")]),t._v("三个属性值的对象。")]),t._v(" "),a("ul",[a("li",[t._v("modules：记录了所有解析后的模块；")]),t._v(" "),a("li",[t._v("chunks：记录了所有chunk；")]),t._v(" "),a("li",[t._v("assets：记录了所有要生成的文件。")])]),t._v(" "),a("p",[t._v("Stats对象本质上来自于"),a("code",[t._v("lib/Stats.js")]),t._v("的类实例，常用的方法"),a("code",[t._v("stats.hasWarnings()")]),t._v("、"),a("code",[t._v("stats.hasErrors()")]),t._v("、"),a("code",[t._v("stats.toJson()")]),t._v("和"),a("code",[t._v("stats.toString()")]),t._v("都可以在这个类里面找到对应的实现。")]),t._v(" "),a("h3",{attrs:{id:"stats-对象数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stats-对象数据结构","aria-hidden":"true"}},[t._v("#")]),t._v(" Stats 对象数据结构")]),t._v(" "),a("p",[t._v("Stats 对象的 JSON 数据结构，除了通过"),a("code",[t._v("Compilation.getStats()")]),t._v("获得，还可以在 webpack 回调中，通过 "),a("code",[t._v("callback")]),t._v(" 参数获得：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("webpack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stats")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toJson")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("还可以通过 webpack-cli 的选项将本次打包的 stats 存入一个 json 文件："),a("code",[t._v("webpack --profile --json > compilation-stats.json")]),t._v("。")]),t._v(" "),a("p",[t._v("stats.toJson()得到的数据结构格式如下：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4.29.6"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用来编译的 webpack 的版本")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"11593e3b3ac85436984a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译使用的 hash")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"time"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2469")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译耗时 (ms)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"filteredModules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当 `exclude`传入`toJson` 函数时，统计被无视的模块的数量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputPath"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// path to webpack 输出目录的 path 路径")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"assetsByChunkName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用作映射的 chunk 的名称")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"main"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"web.js?h=11593e3b3ac85436984a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"named-chunk"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"named-chunk.web.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"other-chunk"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"other-chunk.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"other-chunk.css"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"assets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// asset 对象 (asset objects) 的数组")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"chunks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// chunk 对象 (chunk objects) 的数组")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"modules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块对象 (module objects) 的数组")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"errors"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误字符串 (error string) 的数组")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"warnings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 警告字符串 (warning string) 的数组")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这里面除了编译基本信息、报错和 warnings 之外，就是"),a("code",[t._v("modules")]),t._v("、"),a("code",[t._v("chunks")]),t._v("和"),a("code",[t._v("assets")]),t._v("三个对应的数组，里面是单个的"),a("code",[t._v("module")]),t._v("、"),a("code",[t._v("chunk和asset")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[a("em",[a("strong",[t._v("Tips：")])]),t._v(" stats.toJson可以指定要不要输出对应的数据。例如不想输出 modules 和 chunks，可以使用stats.toJson({modules: false, chunks: false})。")])]),t._v(" "),a("h3",{attrs:{id:"module"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module","aria-hidden":"true"}},[t._v("#")]),t._v(" module")]),t._v(" "),a("p",[t._v("在每个 module 中，我们可以得到它的所有信息，这些信息可以分为四大类：")]),t._v(" "),a("ul",[a("li",[t._v("基本信息：包括最基本的内容、大小、id；")]),t._v(" "),a("li",[t._v("依赖关系：module.reasons对象描述了这个模块被加入依赖图表的理由，包含了引入的方式、引入的 module 信息及其对应代码在第几行第几列等，可以通过这个计算出 module 之间的依赖关系图表（graph）；")]),t._v(" "),a("li",[t._v("chunks 和 assets 关系：module.chunks和module.assets包含到 chunks 和 assets 中的对应 id 等；")]),t._v(" "),a("li",[t._v("被 webpack 处理的后的信息：包含module.failed、module.errors、module.warnings等。")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"assets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// asset对象 (asset objects)的数组")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"built"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示这个模块会参与 Loaders , 解析, 并被编译")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cacheable"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示这个模块是否会被缓存")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"chunks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 包含这个模块的 chunks 的 id")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"errors"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理这个模块发现的错误的数量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"failed"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译是否失败")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个模块的ID (类似于 `module.id`)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"identifier"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(webpack)\\\\test\\\\browsertest\\\\lib\\\\index.web.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack内部使用的唯一的标识")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./lib/index.web.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实际文件的地址")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"optional"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每一个对这个模块的请求都会包裹在 `try... catch` 内 (与ESM无关)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"prefetched"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示这个模块是否会被 prefetched")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"profile"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有关 `--profile` flag 的这个模块特有的编译数据 (ms)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"building"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("73")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 载入和解析")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dependencies"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("242")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译依赖")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"factory"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解决依赖")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"reasons"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 见下文描述")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3593")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 预估模块的大小 (byte)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"source"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"// Should not break it...\\r\\nif(typeof..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串化的输入")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"warnings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理模块时警告的数量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("其中module.reasons数据结构如下：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"loc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"33:24-93"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导致这个被加入依赖图标的代码行数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"module"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./lib/index.web.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所基于模块的相对地址 context")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"moduleId"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块的 ID")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"moduleIdentifier"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(webpack)\\\\test\\\\browsertest\\\\lib\\\\index.web.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块的地址")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"moduleName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./lib/index.web.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可读性更好的模块名称 (用于 ")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"更好的打印 (pretty-printing)"')]),t._v(")\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"require.context"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用的请求的种类 (type of request)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"userRequest"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../../cases"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用来 `import` 或者 `require` 的源字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"chunk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunk","aria-hidden":"true"}},[t._v("#")]),t._v(" chunk")]),t._v(" "),a("p",[t._v("在每个 chunk 中，信息也可以分为四大类：")]),t._v(" "),a("ul",[a("li",[t._v("基本信息：包括最基本的内容、大小、id；")]),t._v(" "),a("li",[t._v("来源：chunk.origins对象描述了这个模块被加入的理由，包含了引入的方式、引入的 module 信息及其对应代码在第几行第几列等，可以通过这个计算出 module 之间的依赖关系图表（graph）；")]),t._v(" "),a("li",[t._v("引用关系：chunk.parents和chunk.children被引用和引用的 ids；")]),t._v(" "),a("li",[t._v("包含和被包含：chunk.files和chunk.modules包含到 assets 和自己包含 modules 中信息等。")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"entry"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示这个 chunk 是否包含 webpack 的运行时")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个包含这个 chunk 的文件名的数组")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"filteredModules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 见上文的 结构")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个 chunk 的id")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"initial"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示这个 chunk 是开始就要加载还是 懒加载(lazy-loading)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"modules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块对象 (module objects)的数组")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"web.js?h=11593e3b3ac85436984a"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"names"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 包含在这个 chunk 内的 chunk 的名字的数组")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"origins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下文详述")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"parents"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父 chunk 的 ids")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成 assets 的原因")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"reason"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"split chunk (cache group: asyncVendors) (name: async)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"170746935298270ad813"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自己引用谁")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"children"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引用的顺序")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"childrenByOrder"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"modules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rendered"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示这个 chunk 是否会参与进编译")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("188057")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// chunk 的大小(byte)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("chunk.origins对应的格式如下：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"loc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 具体是哪行生成了这个chunk")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"module"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(webpack)\\\\test\\\\browsertest\\\\lib\\\\index.web.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块的位置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"moduleId"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块的ID")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"moduleIdentifier"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(webpack)\\\\test\\\\browsertest\\\\lib\\\\index.web.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块的地址")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"moduleName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./lib/index.web.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块的相对地址")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// chunk的名称")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"reasons"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块对象中`reason`的数组")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"asset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#asset","aria-hidden":"true"}},[t._v("#")]),t._v(" asset")]),t._v(" "),a("p",[t._v("asset相对简单一些，内容如下：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"chunkNames"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个 asset 包含的 chunk")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"chunks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个 asset 包含的 chunk 的 id")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"emitted"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示这个 asset 是否会让它输出到 output 目录")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10.web.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出的文件名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1058")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文件的大小")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("本小节主要介绍 Webpack 中两个核心的类 Compiler 和 Compilation。Compiler 是每次 Webpack 全部生命周期的对象，而 Compilation 是 Webpack 中每次构建过程的生命周期对象，Compilation 是通过 Compiler 创建的实例。两个类都有自己生命周期，即有自己不同的 Hook，通过添加对应 Hook 事件，可以拿到各自生命周期关键数据和对象。Compilation 有个很重要的对象是 Stats 对象，通过这个对象可以得到 Webpack 打包后的所有module、chunk 和 assets 信息，通过分析Stats 对象可以得到很多有用的信息，比如 webpack-bundle-analyzer这类分析打包结果的插件都是通过分析 Stats 对象来得到分析报告的。另外 Webpack 中lib/Stats.js的源码也可以看下，对于分析打包结果和编写插件都有很大的启发。")]),t._v(" "),a("p",[a("strong",[t._v("本小节 Webpack 相关面试题：")])]),t._v(" "),a("ul",[a("li",[t._v("Webpack 的 Compiler 和 Compilation 对象有什么区别？")]),t._v(" "),a("li",[t._v("Webpack 的 Compiler 和 Compilation 对象有哪些重要的 Hooks？")]),t._v(" "),a("li",[t._v("怎么获取 Webpack 的 Compiler 和 Compilation 对象？")]),t._v(" "),a("li",[t._v("Webpack 的 Stats 对象可以做什么？有什么用？怎么获取？")])])])}),[],!1,null,null,null);s.default=e.exports}}]);